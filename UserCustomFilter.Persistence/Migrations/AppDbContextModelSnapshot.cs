// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UserCustomFilter.Persistence.EntityFramework.Context;

#nullable disable

namespace UserCustomFilter.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UserCustomFilter.Persistence.Entity.CustomFilter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("FilterGroupId")
                        .HasColumnType("uuid");

                    b.Property<string>("FilterName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FilterPicture")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FilterType")
                        .HasColumnType("integer");

                    b.Property<string>("FirstFilterValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SecondFilterValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FilterGroupId");

                    b.ToTable("CustomFilters");
                });

            modelBuilder.Entity("UserCustomFilter.Persistence.Entity.CustomFilterGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FilterGroupName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FilterGroupPicture")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CustomFilterGroups");
                });

            modelBuilder.Entity("UserCustomFilter.Persistence.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("UserCustomFilter.Persistence.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserCustomFilter.Persistence.Entity.CustomFilter", b =>
                {
                    b.HasOne("UserCustomFilter.Persistence.Entity.CustomFilterGroup", "FilterGroup")
                        .WithMany("Filters")
                        .HasForeignKey("FilterGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FilterGroup");
                });

            modelBuilder.Entity("UserCustomFilter.Persistence.Entity.CustomFilterGroup", b =>
                {
                    b.HasOne("UserCustomFilter.Persistence.Entity.User", "User")
                        .WithMany("CustomFilters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserCustomFilter.Persistence.Entity.CustomFilterGroup", b =>
                {
                    b.Navigation("Filters");
                });

            modelBuilder.Entity("UserCustomFilter.Persistence.Entity.User", b =>
                {
                    b.Navigation("CustomFilters");
                });
#pragma warning restore 612, 618
        }
    }
}
